\ Preprocessor Forth Object Oriented Simple - Copyright 2012,2013 J.L. Bezemer
\ You can redistribute this file and/or modify it under
\ the terms of the GNU General Public License

\ Inspired by Mini-OOF, made by Bernd Paysan, 2008
\ WARNING! Incompatible with CLOSURES.4PP

[DEFINED] allocate [IF]
  [DEFINED] forcecellheap [IF]
    : (~~new) allocate abort" Out of heap space" tuck >r execute r> ;
  [THEN]
[THEN]

: (~~child!) over ! ; : parent@ @ 1+ @c ;
: (~~parent!) >r over >r execute r> r> (~~child!) ;
: derived? swap begin over over <> while dup 1+ @c tuck = until = ;
:macro :: : >#> @dup _#_ ; :macro type@ @ ; :macro typeof >#> ['] _#_ ;
:macro kindof typeof derived? ; :macro parentof typeof 1+ @c ;
:macro _mangle ~~ |#| ; :macro sizeof >#> _mangle ;
:macro class struct 1+ ; :macro extends >#> @dup _mangle ;
:macro end-class end-struct @dup _mangle ['] _#_ (~~child!) ;
:macro virtual: field: ; :macro method: >#> <#< ;
:macro end-extends end-struct @over _mangle ['] _#_ ['] _#_ (~~parent!) ;
:macro { >r ; :macro } r> drop ; :macro this r@ ; :macro {} drop ;
:macro :virtual :noname >#> >>> __virtual ; :macro => >#> dup _#_ @ execute ;
:macro :default : extends >>> __default ; :macro :method : >>> __method ;
:macro _defines @nip @over this -> _#_ ! ; :macro virtual => ;
:macro _virtual? @dup >>> __virtual @while _defines ;
:macro _default? @dup >>> __default @while ['] latest _defines ;
:macro _;method ` ;` _virtual? @else @drop _default? ;
:macro ;method _;method @drop @drop ; :macro <- sizeof ;
:macro static extends array >#> _#_ latest _#_ ; :macro default sizeof ;
:macro new >#> ['] @dup _#_ _mangle (~~new) ; :macro instance new to ;
:macro _private >#> @dup >>> } @until @drop hide _#_ _private ;
:macro private{ _private @drop @drop ; :macro overrides >#> this -> _#_ ! ;
