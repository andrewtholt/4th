\ Preprocessor FOOS demo - Copyright 2013 J.L. Bezemer
\ You can redistribute this file and/or modify it under
\ the terms of the GNU General Public License

\ Derived from: http://rosettacode.org/wiki/Polymorphic_copy#Aikido

include lib/memcell.4th
include 4pp/lib/foos.4pp

:: T()                                 \ super class T
   class
     virtual: print                    \ print message
     method:  clone                    \ clone yourself
   end-class {
                                       \ implementing methods
     :virtual print { ." class T" cr } ;method

     :method clone                     ( a1 -- a2)
       dup allocated dup allocate abort" Cannot create object"
       swap >r swap over r> smove
     ;method
   }
;
 
:: S()                                 \ class S
   extends T()                         \ derived from T
   end-extends {                       \ print message
     :virtual print { ." class S" cr } ;method
   }                                   \ clone yourself
;
 
instance T() t                         \ create a new object t
instance S() s                         \ create a new object s

." before copy" cr
t => print                             \ use "print" methods
s => print

t -> clone to tcopy                    \ cloning t, spawning tcopy
s -> clone to scopy                    \ cloning s, spawning scopy

." after copy" cr
tcopy => print                         \ use "print" methods
scopy => print
